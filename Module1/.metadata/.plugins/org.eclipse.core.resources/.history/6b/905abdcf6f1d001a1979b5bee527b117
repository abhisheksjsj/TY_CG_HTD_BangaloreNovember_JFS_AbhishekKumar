package com.capgemini.psad.dao;

import java.io.FileReader;
import java.security.KeyStore.ProtectionParameter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;

import com.capgemini.psad.bean.ContactBean;

public class ContactDAOImpl implements ContactDAO {
	FileReader reader;
	Properties prop;
	ContactBean cbean;
	Connection conn = null;

	public ContactDAOImpl() {
		try {
			reader = new FileReader("db.properties");
			prop = new Properties();
			prop.load(reader);
			Class.forName(prop.getProperty("driverClass"));
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	@Override
	public List<ContactBean> getAllContacts() {
		ArrayList<ContactBean> cList=new ArrayList<ContactBean>();
		try{Connection conn=DriverManager.getConnection(null);
		Statement stmt=conn.createStatement();
		ResultSet rs=stmt.executeQuery(null);
		return null;
		
		while (rs.next()) {
			ContactBean cbean = new ContactBean();

			cbean.setName(rs.getString(1));
			cbean.setNumber(rs.getInt(2));
			cList.add(cbean);
		}
		return cList;
		}
	}catch(

	Exception e)
	{
		e.printStackTrace();
	}return null;
}

	@Override
	public boolean searchContact(String name) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean addContact(ContactBean contact) {
		try (Connection conn = DriverManager.getConnection(prop.getProperty("dbUrl"), prop.getProperty("dbUser"),
				prop.getProperty("dbPassword"));
				PreparedStatement pstmt = conn.prepareStatement(prop.getProperty("insertQuery"));) {
			pstmt.setInt(1, user.getUserid());
			pstmt.setString(2, user.getUsername());
			pstmt.setString(3, user.getEmail());
			pstmt.setString(4, user.getPassword());

			int count = pstmt.executeUpdate();
			if (count > 0) {
				return true;
			}

		} catch (Exception e) {
			e.printStackTrace();
		}
		return false;
	}

	@Override
	public boolean deleteContact(String name) {
		Connection conn = DriverManager.getConnection();
		PreparedStatement pstmt = conn.prepareStatement(arg0);
		pstmt.setString(1, name);
		return true;
	}

	@Override
	public boolean updateContact(String name) {
		(Connection conn = DriverManager.getConnection(prop.getProperty);
				PreparedStatement pstmt = conn.prepareStatement(prop.getProperty("updateQuery"));) {
			pstmt.setString(1, name);
			pstmt.setInt(2, number);
			pstmt.setString(3, group);

			int count = pstmt.executeUpdate();
			if (count > 0) {
				return true;
			}

		} catch (Exception e) {
			e.printStackTrace();
		}
		return false;
	}

}

}// end of main class
